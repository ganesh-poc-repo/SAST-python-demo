name: Python Project CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up environment
      run: |
        export PYENV_VERSION=3.9.5
        pyenv install 3.9.5
        pyenv global 3.9.5
    - name: Install dependencies
      run: python -m pip install --upgrade pip
      env:
        PYENV_VERSION: '3.9.5'
    - name: Run build and tests
      if: succeeds()
      run: |
        python setup.py build bdist_wheel
        python -m twine upload dist/*
    - name: Install library list
      run: pip freeze > requirements.txt
    - name: Add SonarQube details
      uses: sonarqube/sonarcloud-actions@v1.6.0
      with:
        sonarorg-project-key: ${{ secrets.SONARORG_PROJECT_KEY }}
        sonarorg username: ${{ secrets.SONARORG_USERNAME }}
        sonarorg password: ${{ secrets.SONARORG_PASSWORD }}
    - name: Add Artifactory details
      uses: artifactories/scan-action@v1.2.0
      with:
        server_url: ${{ secrets.ARTIFACTORY_SERVER_URL }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    - name: Run SAST & SCA scan
      uses: artifactories/sast-scan-action@v1.2.0
      with:
        server_url: ${{ secrets.ARTIFACTORY_SERVER_URL }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}