name: SAST-python-demo
on:
  push:
    branches: [ main ]
 jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up environment variables
        env:
          PYPROJECT_TOML: ${{ secrets.PYPROJECT_TOML }}
          SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pyproject.toml[dev]
      - name: Run build and tests if applicable
        run: |
          python setup.py sdist bdist_wheel
          python -m twine upload dist/*
      - name: Generate library list
        run: |
          pip freeze > requirements.txt
      - name: Add SonarQube details
        uses: sonarqube/sonarqube-action@v1.0.0
        env:
          SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Add Artifactory details
        uses: artifactory/api-token@v2
        env:
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
          API_KEY: ${{ secrets.API_KEY }}
      - name: Run SAST & SCA scan
        uses: sonarqube/sonarcloud-action@v1.0.0
        env:
          SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}