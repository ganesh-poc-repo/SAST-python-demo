Here is a sample GitHub Actions YAML workflow for the given repository details:

```yml
name: Python CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          # Install required dependencies
          pip install --upgrade pip
          pip install --upgrade wheel

      - name: Install dependencies
        run: |
          python -m pip install --upgrade -r requirements.txt

      - name: Run build and tests (if applicable)
        run: |
          python setup.py sdist bdist_wheel
          python -m twine upload dist/*
          # Comment this line if you don't have pytest installed
          # python -m pytest tests/

      - name: Generate library list file
        run: |
          pip freeze > requirements.txt

      - name: Add sonarqube details
        env:
          SONARQUBE_URL: https://sonarqube.com
          SONARQUBE_TOKEN: $(echo ${{ secrets.SONARQUBE_TOKEN }})"
          SONARQUBE_PROJECT_KEY: your_project_key"

      - name: Add Artifactory details
        env:
          ARTIFACTORY_URL: 'https://your-artifactory-url.com'
          ARTIFACTORY_USERNAME: "your_artifactory_username"
          ARTIFACTORY_PASSWORD: $(echo ${{ secrets.ARTIFACTORY_PASSWORD }})"

      - name: Run SAST scan
        env:
          SONARQUBE_TOKEN: $(echo ${{ secrets.SONARQUBE_TOKEN }})"
          ARTIFACTORY_URL: 'https://your-artifactory-url.com'
          ARTIFACTORY_USERNAME: "your_artifactory_username"
          ARTIFACTORY_PASSWORD: $(echo ${{ secrets.ARTIFACTORY_PASSWORD }})"
        run: |
          sonarqube -X org/your-organization -X token=$SONARQUBE_TOKEN -X projectKey=your_project_key
```

Note that you need to replace the placeholders with your actual values:

*   `main` is the branch where this workflow will be triggered.
*   Replace `"https://sonarqube.com"`, `"$(echo ${{ secrets.SONARQUBE_TOKEN }})"`, `"your_project_key"`, `"https://your-artifactory-url.com"`, `"your_artifactory_username"` and `"$(echo ${{ secrets.ARTIFACTORY_PASSWORD }})"` with your actual SonarQube URL, token, project key, Artifactory URL, username and password respectively.

Also, remember to update the `requirements.txt` file by running `pip freeze > requirements.txt`. 

Make sure that all the dependencies are installed before trying to install any other package. 

Please let me know if you need further modifications.