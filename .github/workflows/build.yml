Here is a sample GitHub Actions YAML workflow that meets your requirements:

```yml
name: Python Package Build and Test

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment
        env:
          PYCHARM_HOSTED: "false"
        run: |
          export PATH=$HOME/.local/bin:$PATH

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run build and tests
        shell: bash
        run: |
          # Run your build script here, e.g.
          # python build.py

      - name: Run library list file
        shell: bash
        run: |
          python library_list.py

      - name: Add sonarqube details
        uses: sonarqube/sonarqube-action@v1.3.4
        with:
          token: ${{ secrets.SONARQUBE_TOKEN }}
          project-key: "your-project-key"
          project-name: "Your Project Name"

      - name: Add artifactory details
        uses: artifactory/artifactory-github-actions-action@v1.2.0
        with:
          token: ${{ secrets.ARTIFACTORY_TOKEN }}
          username: "your-username"
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Run SAST scan
        uses: sonarqube/sonarqube-action@v1.3.4
        with:
          token: ${{ secrets.SONARQUBE_TOKEN }}
          project-key: "your-project-key"
          project-name: "Your Project Name"

      - name: Run SCA scan
        uses: sonarqube/sonarqube-action@v1.3.4
        with:
          token: ${{ secrets.SONARQUBE_TOKEN }}
          project-key: "your-project-key"
          project-name: "Your Project Name"
```

Please replace `"your-project-key"`, `"your-username"`, and `"your-password"` with your actual Sonarqube, Artifactory, and GitHub personal access token details respectively. Also, ensure that the `requirements.txt` file is present in your repository.

This workflow uses the following actions:

1. `actions/checkout@v2`: to checkout the repository.
2. `sonarqube/sonarqube-action@v1.3.4`: for SAST and SCA scan, as well as adding Sonarqube details.
3. `artifactory/artifactory-github-actions-action@v1.2.0`: to add Artifactory details.

Note: Always replace your actual credentials with environment variables (`{{ secrets.SONARQUBE_TOKEN }}`, etc.) for better security and organization.