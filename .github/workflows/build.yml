Here is a sample `build.yml` file for your Python repository:
```
name: Python package build and test

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment
        env:
          PYTEST_ARGS: '--min-level=3'

      - name: Install dependencies
        run: |
          # Update pip
          pip install --upgrade pip

          # Install dependencies
          pip install -r requirements.txt

      - name: Run build and tests
        run: |
          pytest --cov= package_name tests/

      - name: Generate library list
        run: |
          python -m pyproject.toml

      - name: Add SonarQube details
        env:
          SONAR_HOST_URL: https://sonarqube.example.com
          SONAR_USERNAME: sonarqube-user
          SONAR_PASSWORD: sonarqube-password
          SONAR_PROJECT_KEY: package_name
          SONAR_PROJECT_NAME: Package Name

      - name: Add Artifactory details
        env:
          ARTIFACTORY_URL: https://artifactory.example.com
          ARTIFACTORY_USERNAME: artifactory-user
          ARTIFACTORY_PASSWORD: artifactory-password
          ARTIFACTORY_API_TOKEN: ${{ secrets.ARTIFACTORY_API_TOKEN }}

      - name: Run SAST & SCA scan
        uses: sonarqube/sonarqube-analysis@v2.0.5
        env:
          SONAR_HOST_URL: https://sonarqube.example.com
          SONAR_USERNAME: sonarqube-user
          SONAR_PASSWORD: sonarqube-password
          SONAR_PROJECT_KEY: package_name
          SONAR_PROJECT_NAME: Package Name
```
This workflow assumes the following:

*   You have a `requirements.txt` file listing your dependencies.
*   Your project uses pytest for testing, and you want to run it with coverage reporting. Adjust the `pytest` command accordingly if needed.
*   You want to generate a library list using the `pyproject.toml` file's built-in functionality. If your project doesn't use this feature, remove or comment out this step.
*   Your SonarQube instance is running at `https://sonarqube.example.com`, and you have credentials set up for it. Replace these with your actual credentials.
*   Your Artifactory instance is running at `https://artifactory.example.com`, and you have credentials set up for it, including an API token stored as a secret named `ARTIFACTORY_API_TOKEN`.

Adjust this workflow according to your project's specific requirements and dependencies.